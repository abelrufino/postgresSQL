CREATE DATABASE praticapostgresql16;

CREATE TABLE categorias(
	id SERIAL PRIMARY KEY,
	nome VARCHAR(60) NOT NULL
);

CREATE TABLE produtos(
	id SERIAL PRIMARY KEY,
	descricao VARCHAR(60) NOT NULL,
	preco_venda DECIMAL(8,2) NOT NULL,
	preco_custo MONEY NOT NULL,
	id_categoria INT NOT NULL,
	FOREIGN KEY (id_categoria) REFERENCES categorias(id)
);


INSERT INTO categorias(nome) VALUES ('Material Escolar');
INSERT INTO categorias(nome) VALUES ('Acessório de Informática');
INSERT INTO categorias(nome) VALUES ('Material Escolar');
INSERT INTO categorias(nome) VALUES ('Game');

SELECT * FROM categorias;

INSERT INTO produtos(descricao, preco_venda, preco_custo, id_categoria) VALUES ('Caderno', 5.45, 2.30, 1);
INSERT INTO produtos(descricao, preco_venda, preco_custo, id_categoria) VALUES ('Caneta', 1.20, 0.45, 1);
INSERT INTO produtos(descricao, preco_venda, preco_custo, id_categoria) VALUES ('Pendrive' ,120.54, 32.55, 2);
INSERT INTO produtos(descricao, preco_venda, preco_custo, id_categoria) VALUES ('Mouse', 17.00, 4.30, 2);

SELECT * FROM produtos;

--MAX 
SELECT MAX(preco_venda) FROM produtos; 

SELECT MAX(preco_custo) FROM produtos;

--MIN
SELECT MIN(preco_venda) FROM produtos;

SELECT MIN(preco_custo) FROM produtos;

--AVG
SELECT AVG(preco_custo) FROM produtos;  -- Não funciona devido tipo de atributo MONEY

SELECT AVG(preco_venda) FROM produtos; -- Funciona devido tipo do atributo NUMERIC

SELECT TO_CHAR(AVG(preco_venda),'99999999D99') AS Media FROM produtos;

-- AVG ROUND
SELECT ROUND(AVG(preco_venda)::numeric,2) FROM produtos; -- Formatando de MONEY para NUMERIC

SELECT ROUND(AVG(preco_custo::numeric),2) FROM produtos; -- Calculando a média de valor Money

SELECT ROUND(AVG(preco_venda), 4) FROM produtos;

-- COUNT 
SELECT COUNT(preco_venda) FROM produtos p
WHERE p.id_categoria = 1;

-- GROUP BY
SELECT id_categoria, MAX(preco_venda) FROM produtos 
GROUP BY id_categoria;

-- HAVING 
SELECT id_categoria, MAX(preco_venda) FROM produtos
GROUP BY id_categoria 
HAVING MAX(preco_venda) > 10;
